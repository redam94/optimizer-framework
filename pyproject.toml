[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "atlas"
version = "0.1.0"
description = "A unified framework for optimizing budget allocations across diverse models"
readme = "README.md"
authors = [
    {name = "Matthew Reda", email = "mattreda@mattreda.pro"},
]
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "xarray>=2023.1.0",
    "scipy>=1.10.0",
    "optuna>=3.0.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "rich>=13.0.0",
    "structlog>=23.0.0",
    "joblib>=1.5.1",
]

[project.optional-dependencies]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-copybutton>=0.5.0",
    "sphinx-tabs>=3.2.0",
    "sphinx-autodoc-typehints>=1.12.0",
    "myst-parser>=0.18.0",
    "nbsphinx>=0.8.0",
    "sphinx-autobuild>=2021.3.14",
    "sphinxcontrib-mermaid>=0.7.1",
    "sphinx-design>=0.6.1",
    "linkify-it-py>=2.0.3",
]

dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "nbdev>=2.3.0",
    "jupyter>=1.0.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
]

ml = [
    "scikit-learn>=1.3.0",
    "xgboost>=2.0.0",
    "lightgbm>=4.0.0",
]

cloud = [
    "boto3>=1.26.0",
    "google-cloud-aiplatform>=1.25.0",
    "azure-ai-ml>=1.5.0",
]

[project.urls]
Homepage = "https://github.com/redam94/optimize-framework"
Documentation = "https://optimize-framework.readthedocs.io"
Repository = "https://github.com/redam94/optimize-framework"
Issues = "https://github.com/redam94/optimize-framework/issues"

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-ra --strict-markers --cov=atlas"

[tool.coverage.run]
branch = true
source = ["atlas"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.uv.sources]
atlas = { workspace = true }

[dependency-groups]
dev = [
    "linkify-it-py>=2.0.3",
    "pandas-stubs>=2.3.0.250703",
    "marimo>=0.14.16",
    "sphinx-design>=0.6.1",
]
ml = [
    "lightgbm>=4.6.0",
    "scikit-learn>=1.7.1",
    "xgboost>=3.0.3",
]
test = [
    "types-pyyaml>=6.0.12.20250516",
]
